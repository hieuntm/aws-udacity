# Describe GuardDuty findings that were detected related to the brute force attack
It was detected Recon:EC2/PortProbeUnprotectedPort
An unprotected port on EC2 instance i-00c4060a82c90d3c4 is being probed
An EC2 instance has an unprotected port which is being probed by a known malicious host
With vpcid: vpc-088605a6b1a0a3b36

It also detected UnauthorizedAccess:EC2/SSHBruteForce
i-07fd8ec5c23cdd419 is performing SSH brute force attacks against 10.192.10.147. Brute force attacks are used to gain unauthorized access to your instance by guessing the SSH password

# Research the AWS Guard Duty documentation page and explain how GuardDuty may have detected this attack - i.e. what was its source of information.
GuardDuty is a continuous security monitoring service that analyses and process the data from resources hourly, 

VPC Flow Logs takes information about the IP traffic going to and from Amazon EC2 network interfaces in your VPC

Data source: VPC flow logs  ( for this attack)
This finding informs that an EC2 instance in your AWS environment was involved in a brute force attack aimed at obtaining passwords to SSH services on Linux-based systems. 
This can indicate unauthorized access to your AWS resources.

This finding is generated only through port 22, if SSH services were configured to use another port this finding is not generated.

Ref: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html?icmpid=docs_gd_help_panel#unauthorizedaccess-ec2-sshbruteforce


This finding informs you that a port on the listed EC2 instance in your AWS environment is not blocked by a security group, access control list (ACL), or an on-host firewall such as Linux IPTables, and that known scanners on the internet are actively probing it.

If the identified unprotected port is 22 or 3389 and you are using these ports to connect to your instance, you can still limit exposure by allowing access to these ports only to the IP addresses from your corporate network IP address space. To restrict access to port 22 on Linux, see Authorizing Inbound Traffic for Your Linux Instances. To restrict access to port 3389 on Windows, see Authorizing Inbound Traffic for Your Windows Instances.

GuardDuty doesn't generate this finding for ports 443 and 80.

Ref: https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_finding-types-ec2.html#recon-ec2-portprobeunprotectedport